Significa fazer os dados continuarem a existirem independente do sistema aonde estão funcionando, mesmo quando terminar a execução do sistema, estes dados precisam continuar existindo em outro ambiente externo. Então entram agora em cena os bancos de dados relacionais, que são o tipo mais utilizado. Entretanto, o conceito de banco de dados relacional é bem diferente de um conceito do paradigma de orientação a objetos, onde contamos com atributos e métodos. Bancos de dados trabalham apenas com armazenamento de dados em tabelas estratégias de destes dados. Mas os objetos se relacionam apenas em tempo de execução através de seus métodos. Visto que são tão diferentes, mas não podem “viver separados”, precisamos criar um meio que interpreta a comunicação entre os dois. Esse “mediador” funciona através de uma técnica chamada mapeamento objeto-relacional ou ORM.

Sabemos que o grande sucesso dos bancos de dados relacionais se deve a linguagem padronizada SQL utilizada em todos os sistemas de bancos de dados relacionais. Mas acontece que esse mesmo recurso poderoso ainda têm seus usos equivocados por programadores, que acaba por criar outros problemas como baixo desempenho do sistema e difícil manutenção. Por isso precisamos isolar todos os comandos utilizados da linguagem SQL em uma camada separada que poderá até ser designada a alguém mais especializado na linguagem. Para isso vamos ver um padrão de projeto muito usual que é conhecido como Table Data Gateway.

Esse padrão Table Data Gateway provê um meio mais simplificado de manipular uma tabela no banco de dados. O brilho disso está na forma de utilizá-la, porque os detalhes ficam todos escondidos atrás de uma interface clara. Isso é fantástico quando você imagina que não encontrará mais nenhuma declaração SQL espalhada pelo seu código. Aliás, quando você criou a classe e efetuou seus testes, aprovando o funcionamento da classe, dificilmente enfrentará problemas SQL com as operações envolvidas através do objeto gerado pela classe. Neste padrão você conta com as quatro operações básicas do CRUD: Inserir (Create), buscar (Retrieve), alterar (Update), excluir (Delete).